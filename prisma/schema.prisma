// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

model Example {
    id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    Project       Project?  @relation(fields: [projectId], references: [id])
    projectId     String?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Comments {
    name     String
    date     DateTime @default(now())
    avatar   String
    message  String
    id       String   @id @default(cuid())
    Ticket   Ticket?  @relation(fields: [ticketId], references: [id])
    ticketId String?
}

model Ticket {
    id          String     @id @default(cuid())
    title       String
    description String
    priority    String
    ticketType  String
    assignedTo  String
    complexity  String     @default("")
    completed   Boolean    @default(false)
    comments    Comments[]
}

model Project {
    id      String @id @default(cuid())
    title   String
    details String
    team    User[]
}

model TestPost {
    id    String @id @default(cuid())
    title String
}
